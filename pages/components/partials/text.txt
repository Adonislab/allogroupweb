import { useEffect, useState } from 'react';
import { getAuth, onAuthStateChanged } from 'firebase/auth';
import { getFirestore, doc, getDoc } from 'firebase/firestore';
import Link from 'next/link';
import { useRouter } from 'next/router';

// Définir des constantes pour les rôles
const ROLES = {
  ADMIN: 'admin',
  COMPTABLE: 'comptable',
  DECIDEUR: 'decideur',
  CHAMPION: 'champion',
  MARCHAND: 'marchand',
};

export default function Sidebar() {
  const router = useRouter();
  const [user, setUser] = useState(null);
  const [userRole, setUserRole] = useState(null); // Utilisez un seul rôle au lieu d'une liste de rôles

  useEffect(() => {
    const auth = getAuth();
    onAuthStateChanged(auth, async (authUser) => {
      if (authUser) {
        setUser(authUser);

        const db = getFirestore();
        // Utilisez authUser.uid pour obtenir l'ID de l'utilisateur connecté
        const userId = authUser.uid;
        
        const userRolesDoc = doc(db, 'users', userId);

        // Exécutez la requête pour récupérer les rôles de l'utilisateur
        getDoc(userRolesDoc)
          .then((docSnapshot) => {
            if (docSnapshot.exists()) {
              const data = docSnapshot.data();
              console.log('Données du document utilisateur:', data); // Affichez les données du document utilisateur
              const rolesWithTrueHasRole = Object.keys(data).filter((role) => data[role] === true);
              console.log('Rôles avec true HasRole:', rolesWithTrueHasRole); // Affichez les rôles avec true HasRole
              if (rolesWithTrueHasRole.length === 1) {
                setUserRole(rolesWithTrueHasRole[0]);
              }
            }
          })
          .catch((error) => {
            console.error('Erreur lors de la récupération des rôles:', error);
          });
      } else {
        setUser(null);
        // Ne pas définir userRole à vide pour afficher la page "Accueil" par défaut
      }
    });
  }, []);

  // Exemple de structure d'éléments liés aux rôles
  const roleItems = {
    [ROLES.ADMIN]: {
      name: 'Tableau Administrateur',
      url: '/dashboard',
      icon: 'speedometer2',
    },
    [ROLES.DECIDEUR]: {
      name: 'Rapports',
      url: '/reports',
      icon: 'clipboard2-data',
    },
    [ROLES.COMPTABLE]: {
      name: 'Tableau de Vison',
      url: '/dashboard',
      icon: 'speedometer2',
    },
    [ROLES.MARCHAND]: {
      name: 'Mes ventes',
      url: '/venteMarchand',
      icon: 'speedometer2',
    },
    [ROLES.CHAMPION]: {
      name: 'Champion Board',
      url: '/dashboardChampion',
      icon: 'speedometer2',
    },
  };

  // Élément de menu générique pour l'utilisateur sans rôle
  const defaultMenuItem = {
    name: 'Accueil',
    url: '/politique',
    icon: 'question-diamond-fill',
  };

  return (
    <aside id="logo-sidebar" className="fixed top-0 left-0 z-40 w-64 h-screen pt-20 transition-transform -translate-x-full bg-white border-r border-gray-200 sm:translate-x-0 dark:bg-gray-800 dark:border-gray-700" aria-label="Sidebar">
      <div className="h-full px-3 pb-4 overflow-y-auto bg-white dark:bg-gray-800">
        <ul className="space-y-2 font-medium">
          {userRole ? (
            <li>
              <Link href={roleItems[userRole].url} className={`flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover-bg-gray-700 group ${router.asPath === roleItems[userRole].url ? 'bg-orange-500' : ''}`}>
                <i className={"bg-blue-900 p-1 px-2 rounded-md bi bi-" + roleItems[userRole].icon}></i>
                <span className="ml-3 font-semibold">{roleItems[userRole].name}</span>
              </Link>
            </li>
          ) : (
            <li>
              <Link href={defaultMenuItem.url} className="flex items-center p-2 text-gray-900 rounded-lg dark:text-white hover-bg-gray-700 group">
                <i className={"bg-blue-900 p-1 px-2 rounded-md bi bi-" + defaultMenuItem.icon}></i>
                <span className="ml-3 font-semibold">{defaultMenuItem.name}</span>
              </Link>
            </li>
          )}
        </ul>
      </div>
    </aside>
  );
}
